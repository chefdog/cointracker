// <auto-generated />
using CryptoTracker.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CryptoTracker.Common.Migrations
{
    [DbContext(typeof(CTDbContext))]
    partial class CTDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CryptoTracker.Core.Models.ArticleModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleType");

                    b.Property<long>("CoinId");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<long>("PortfolioId");

                    b.Property<int>("Rating");

                    b.Property<Guid>("RowGuid");

                    b.Property<string>("Title");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Article","ct");
                });

            modelBuilder.Entity("CryptoTracker.Core.Models.CoinModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BuyPrice");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<decimal>("ListPrice");

                    b.Property<int>("Rating");

                    b.Property<Guid>("RowGuid");

                    b.Property<decimal>("SellPrice");

                    b.Property<string>("Tag");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Coin","ct");
                });

            modelBuilder.Entity("CryptoTracker.Core.Models.HistoryLogModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<string>("ParamKey");

                    b.Property<string>("ParamValue");

                    b.Property<int>("Rating");

                    b.Property<Guid>("RowGuid");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("HistoryLog","ct");
                });

            modelBuilder.Entity("CryptoTracker.Core.Models.MiningItemModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<int>("Rating");

                    b.Property<Guid>("RowGuid");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("MiningItem","ct");
                });

            modelBuilder.Entity("CryptoTracker.Core.Models.MiningRigModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<int>("Rating");

                    b.Property<Guid>("RowGuid");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("MiningRig","ct");
                });

            modelBuilder.Entity("CryptoTracker.Core.Models.ParagraphModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArticleId");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<string>("Paragraph");

                    b.Property<int>("Rating");

                    b.Property<Guid>("RowGuid");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Paragraph","ct");
                });

            modelBuilder.Entity("CryptoTracker.Core.Models.PortfolioItemModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CoinModelId");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<long>("MiningModelId");

                    b.Property<long>("PortfolioId");

                    b.Property<int>("Rating");

                    b.Property<Guid>("RowGuid");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("PortfolioItem","ct");
                });

            modelBuilder.Entity("CryptoTracker.Core.Models.PortfolioModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<bool>("IsPrivate");

                    b.Property<bool>("IsShared");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<int>("Rating");

                    b.Property<Guid>("RowGuid");

                    b.Property<string>("Title");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Portfolio","ct");
                });

            modelBuilder.Entity("CryptoTracker.Core.Models.UserAccountModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<int>("Rating");

                    b.Property<Guid>("RowGuid");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("UserAccount","ct");
                });
#pragma warning restore 612, 618
        }
    }
}
